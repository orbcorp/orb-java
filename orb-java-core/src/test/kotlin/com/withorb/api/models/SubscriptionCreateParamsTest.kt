// File generated from our OpenAPI spec by Stainless.

package com.withorb.api.models

import com.withorb.api.core.JsonValue
import com.withorb.api.models.*
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class SubscriptionCreateParamsTest {

    @Test
    fun createSubscriptionCreateParams() {
        SubscriptionCreateParams.builder()
            .addAdjustments(
                listOf(
                    SubscriptionCreateParams.AddAdjustment.builder()
                        .adjustment(
                            SubscriptionCreateParams.AddAdjustment.Adjustment
                                .ofNewPercentageDiscount(
                                    SubscriptionCreateParams.AddAdjustment.Adjustment
                                        .NewPercentageDiscount
                                        .builder()
                                        .adjustmentType(
                                            SubscriptionCreateParams.AddAdjustment.Adjustment
                                                .NewPercentageDiscount
                                                .AdjustmentType
                                                .PERCENTAGE_DISCOUNT
                                        )
                                        .appliesToPriceIds(listOf("string"))
                                        .percentageDiscount(0.0)
                                        .isInvoiceLevel(true)
                                        .build()
                                )
                        )
                        .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .planPhaseOrder(0L)
                        .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
            )
            .addPrices(
                listOf(
                    SubscriptionCreateParams.AddPrice.builder()
                        .discounts(
                            listOf(
                                SubscriptionCreateParams.AddPrice.Discount.builder()
                                    .discountType(
                                        SubscriptionCreateParams.AddPrice.Discount.DiscountType
                                            .PERCENTAGE
                                    )
                                    .amountDiscount("amount_discount")
                                    .percentageDiscount(0.15)
                                    .usageDiscount(0.0)
                                    .build()
                            )
                        )
                        .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .externalPriceId("external_price_id")
                        .maximumAmount("1.23")
                        .minimumAmount("1.23")
                        .planPhaseOrder(0L)
                        .price(
                            SubscriptionCreateParams.AddPrice.Price.ofNewSubscriptionUnitPrice(
                                SubscriptionCreateParams.AddPrice.Price.NewSubscriptionUnitPrice
                                    .builder()
                                    .cadence(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .Cadence
                                            .ANNUAL
                                    )
                                    .itemId("item_id")
                                    .modelType(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .ModelType
                                            .UNIT
                                    )
                                    .name("Annual fee")
                                    .unitConfig(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .UnitConfig
                                            .builder()
                                            .unitAmount("unit_amount")
                                            .build()
                                    )
                                    .billableMetricId("billable_metric_id")
                                    .billedInAdvance(true)
                                    .billingCycleConfiguration(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .BillingCycleConfiguration
                                            .builder()
                                            .duration(0L)
                                            .durationUnit(
                                                SubscriptionCreateParams.AddPrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .BillingCycleConfiguration
                                                    .DurationUnit
                                                    .DAY
                                            )
                                            .build()
                                    )
                                    .conversionRate(0.0)
                                    .currency("currency")
                                    .externalPriceId("external_price_id")
                                    .fixedPriceQuantity(0.0)
                                    .invoiceGroupingKey("invoice_grouping_key")
                                    .invoicingCycleConfiguration(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .InvoicingCycleConfiguration
                                            .builder()
                                            .duration(0L)
                                            .durationUnit(
                                                SubscriptionCreateParams.AddPrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .InvoicingCycleConfiguration
                                                    .DurationUnit
                                                    .DAY
                                            )
                                            .build()
                                    )
                                    .metadata(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .Metadata
                                            .builder()
                                            .build()
                                    )
                                    .referenceId("reference_id")
                                    .build()
                            )
                        )
                        .priceId("h74gfhdjvn7ujokd")
                        .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
            )
            .alignBillingWithSubscriptionStartDate(true)
            .autoCollection(true)
            .awsRegion("aws_region")
            .billingCycleAnchorConfiguration(
                SubscriptionCreateParams.BillingCycleAnchorConfiguration.builder()
                    .day(1L)
                    .month(1L)
                    .year(0L)
                    .build()
            )
            .couponRedemptionCode("coupon_redemption_code")
            .creditsOverageRate(0.0)
            .customerId("customer_id")
            .defaultInvoiceMemo("default_invoice_memo")
            .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
            .externalCustomerId("external_customer_id")
            .externalMarketplace(SubscriptionCreateParams.ExternalMarketplace.GOOGLE)
            .externalMarketplaceReportingId("external_marketplace_reporting_id")
            .externalPlanId("ZMwNQefe7J3ecf7W")
            .filter("my_property > 100 AND my_other_property = 'bar'")
            .initialPhaseOrder(2L)
            .invoicingThreshold("10.00")
            .metadata(SubscriptionCreateParams.Metadata.builder().build())
            .netTerms(0L)
            .perCreditOverageAmount(0.0)
            .planId("ZMwNQefe7J3ecf7W")
            .planVersionNumber(0L)
            .priceOverrides(listOf(JsonValue.from(mapOf<String, Any>())))
            .removeAdjustments(
                listOf(
                    SubscriptionCreateParams.RemoveAdjustment.builder()
                        .adjustmentId("h74gfhdjvn7ujokd")
                        .build()
                )
            )
            .removePrices(
                listOf(
                    SubscriptionCreateParams.RemovePrice.builder()
                        .externalPriceId("external_price_id")
                        .priceId("h74gfhdjvn7ujokd")
                        .build()
                )
            )
            .replaceAdjustments(
                listOf(
                    SubscriptionCreateParams.ReplaceAdjustment.builder()
                        .adjustment(
                            SubscriptionCreateParams.ReplaceAdjustment.Adjustment
                                .ofNewPercentageDiscount(
                                    SubscriptionCreateParams.ReplaceAdjustment.Adjustment
                                        .NewPercentageDiscount
                                        .builder()
                                        .adjustmentType(
                                            SubscriptionCreateParams.ReplaceAdjustment.Adjustment
                                                .NewPercentageDiscount
                                                .AdjustmentType
                                                .PERCENTAGE_DISCOUNT
                                        )
                                        .appliesToPriceIds(listOf("string"))
                                        .percentageDiscount(0.0)
                                        .isInvoiceLevel(true)
                                        .build()
                                )
                        )
                        .replacesAdjustmentId("replaces_adjustment_id")
                        .build()
                )
            )
            .replacePrices(
                listOf(
                    SubscriptionCreateParams.ReplacePrice.builder()
                        .replacesPriceId("replaces_price_id")
                        .discounts(
                            listOf(
                                SubscriptionCreateParams.ReplacePrice.Discount.builder()
                                    .discountType(
                                        SubscriptionCreateParams.ReplacePrice.Discount.DiscountType
                                            .PERCENTAGE
                                    )
                                    .amountDiscount("amount_discount")
                                    .percentageDiscount(0.15)
                                    .usageDiscount(0.0)
                                    .build()
                            )
                        )
                        .externalPriceId("external_price_id")
                        .fixedPriceQuantity(2.0)
                        .maximumAmount("1.23")
                        .minimumAmount("1.23")
                        .price(
                            SubscriptionCreateParams.ReplacePrice.Price.ofNewSubscriptionUnitPrice(
                                SubscriptionCreateParams.ReplacePrice.Price.NewSubscriptionUnitPrice
                                    .builder()
                                    .cadence(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .Cadence
                                            .ANNUAL
                                    )
                                    .itemId("item_id")
                                    .modelType(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .ModelType
                                            .UNIT
                                    )
                                    .name("Annual fee")
                                    .unitConfig(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .UnitConfig
                                            .builder()
                                            .unitAmount("unit_amount")
                                            .build()
                                    )
                                    .billableMetricId("billable_metric_id")
                                    .billedInAdvance(true)
                                    .billingCycleConfiguration(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .BillingCycleConfiguration
                                            .builder()
                                            .duration(0L)
                                            .durationUnit(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .BillingCycleConfiguration
                                                    .DurationUnit
                                                    .DAY
                                            )
                                            .build()
                                    )
                                    .conversionRate(0.0)
                                    .currency("currency")
                                    .externalPriceId("external_price_id")
                                    .fixedPriceQuantity(0.0)
                                    .invoiceGroupingKey("invoice_grouping_key")
                                    .invoicingCycleConfiguration(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .InvoicingCycleConfiguration
                                            .builder()
                                            .duration(0L)
                                            .durationUnit(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .InvoicingCycleConfiguration
                                                    .DurationUnit
                                                    .DAY
                                            )
                                            .build()
                                    )
                                    .metadata(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .Metadata
                                            .builder()
                                            .build()
                                    )
                                    .referenceId("reference_id")
                                    .build()
                            )
                        )
                        .priceId("h74gfhdjvn7ujokd")
                        .build()
                )
            )
            .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
            .trialDurationDays(0L)
            .build()
    }

    @Test
    fun getBody() {
        val params =
            SubscriptionCreateParams.builder()
                .addAdjustments(
                    listOf(
                        SubscriptionCreateParams.AddAdjustment.builder()
                            .adjustment(
                                SubscriptionCreateParams.AddAdjustment.Adjustment
                                    .ofNewPercentageDiscount(
                                        SubscriptionCreateParams.AddAdjustment.Adjustment
                                            .NewPercentageDiscount
                                            .builder()
                                            .adjustmentType(
                                                SubscriptionCreateParams.AddAdjustment.Adjustment
                                                    .NewPercentageDiscount
                                                    .AdjustmentType
                                                    .PERCENTAGE_DISCOUNT
                                            )
                                            .appliesToPriceIds(listOf("string"))
                                            .percentageDiscount(0.0)
                                            .isInvoiceLevel(true)
                                            .build()
                                    )
                            )
                            .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .planPhaseOrder(0L)
                            .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .build()
                    )
                )
                .addPrices(
                    listOf(
                        SubscriptionCreateParams.AddPrice.builder()
                            .discounts(
                                listOf(
                                    SubscriptionCreateParams.AddPrice.Discount.builder()
                                        .discountType(
                                            SubscriptionCreateParams.AddPrice.Discount.DiscountType
                                                .PERCENTAGE
                                        )
                                        .amountDiscount("amount_discount")
                                        .percentageDiscount(0.15)
                                        .usageDiscount(0.0)
                                        .build()
                                )
                            )
                            .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .externalPriceId("external_price_id")
                            .maximumAmount("1.23")
                            .minimumAmount("1.23")
                            .planPhaseOrder(0L)
                            .price(
                                SubscriptionCreateParams.AddPrice.Price.ofNewSubscriptionUnitPrice(
                                    SubscriptionCreateParams.AddPrice.Price.NewSubscriptionUnitPrice
                                        .builder()
                                        .cadence(
                                            SubscriptionCreateParams.AddPrice.Price
                                                .NewSubscriptionUnitPrice
                                                .Cadence
                                                .ANNUAL
                                        )
                                        .itemId("item_id")
                                        .modelType(
                                            SubscriptionCreateParams.AddPrice.Price
                                                .NewSubscriptionUnitPrice
                                                .ModelType
                                                .UNIT
                                        )
                                        .name("Annual fee")
                                        .unitConfig(
                                            SubscriptionCreateParams.AddPrice.Price
                                                .NewSubscriptionUnitPrice
                                                .UnitConfig
                                                .builder()
                                                .unitAmount("unit_amount")
                                                .build()
                                        )
                                        .billableMetricId("billable_metric_id")
                                        .billedInAdvance(true)
                                        .billingCycleConfiguration(
                                            SubscriptionCreateParams.AddPrice.Price
                                                .NewSubscriptionUnitPrice
                                                .BillingCycleConfiguration
                                                .builder()
                                                .duration(0L)
                                                .durationUnit(
                                                    SubscriptionCreateParams.AddPrice.Price
                                                        .NewSubscriptionUnitPrice
                                                        .BillingCycleConfiguration
                                                        .DurationUnit
                                                        .DAY
                                                )
                                                .build()
                                        )
                                        .conversionRate(0.0)
                                        .currency("currency")
                                        .externalPriceId("external_price_id")
                                        .fixedPriceQuantity(0.0)
                                        .invoiceGroupingKey("invoice_grouping_key")
                                        .invoicingCycleConfiguration(
                                            SubscriptionCreateParams.AddPrice.Price
                                                .NewSubscriptionUnitPrice
                                                .InvoicingCycleConfiguration
                                                .builder()
                                                .duration(0L)
                                                .durationUnit(
                                                    SubscriptionCreateParams.AddPrice.Price
                                                        .NewSubscriptionUnitPrice
                                                        .InvoicingCycleConfiguration
                                                        .DurationUnit
                                                        .DAY
                                                )
                                                .build()
                                        )
                                        .metadata(
                                            SubscriptionCreateParams.AddPrice.Price
                                                .NewSubscriptionUnitPrice
                                                .Metadata
                                                .builder()
                                                .build()
                                        )
                                        .referenceId("reference_id")
                                        .build()
                                )
                            )
                            .priceId("h74gfhdjvn7ujokd")
                            .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .build()
                    )
                )
                .alignBillingWithSubscriptionStartDate(true)
                .autoCollection(true)
                .awsRegion("aws_region")
                .billingCycleAnchorConfiguration(
                    SubscriptionCreateParams.BillingCycleAnchorConfiguration.builder()
                        .day(1L)
                        .month(1L)
                        .year(0L)
                        .build()
                )
                .couponRedemptionCode("coupon_redemption_code")
                .creditsOverageRate(0.0)
                .customerId("customer_id")
                .defaultInvoiceMemo("default_invoice_memo")
                .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .externalCustomerId("external_customer_id")
                .externalMarketplace(SubscriptionCreateParams.ExternalMarketplace.GOOGLE)
                .externalMarketplaceReportingId("external_marketplace_reporting_id")
                .externalPlanId("ZMwNQefe7J3ecf7W")
                .filter("my_property > 100 AND my_other_property = 'bar'")
                .initialPhaseOrder(2L)
                .invoicingThreshold("10.00")
                .metadata(SubscriptionCreateParams.Metadata.builder().build())
                .netTerms(0L)
                .perCreditOverageAmount(0.0)
                .planId("ZMwNQefe7J3ecf7W")
                .planVersionNumber(0L)
                .priceOverrides(listOf(JsonValue.from(mapOf<String, Any>())))
                .removeAdjustments(
                    listOf(
                        SubscriptionCreateParams.RemoveAdjustment.builder()
                            .adjustmentId("h74gfhdjvn7ujokd")
                            .build()
                    )
                )
                .removePrices(
                    listOf(
                        SubscriptionCreateParams.RemovePrice.builder()
                            .externalPriceId("external_price_id")
                            .priceId("h74gfhdjvn7ujokd")
                            .build()
                    )
                )
                .replaceAdjustments(
                    listOf(
                        SubscriptionCreateParams.ReplaceAdjustment.builder()
                            .adjustment(
                                SubscriptionCreateParams.ReplaceAdjustment.Adjustment
                                    .ofNewPercentageDiscount(
                                        SubscriptionCreateParams.ReplaceAdjustment.Adjustment
                                            .NewPercentageDiscount
                                            .builder()
                                            .adjustmentType(
                                                SubscriptionCreateParams.ReplaceAdjustment
                                                    .Adjustment
                                                    .NewPercentageDiscount
                                                    .AdjustmentType
                                                    .PERCENTAGE_DISCOUNT
                                            )
                                            .appliesToPriceIds(listOf("string"))
                                            .percentageDiscount(0.0)
                                            .isInvoiceLevel(true)
                                            .build()
                                    )
                            )
                            .replacesAdjustmentId("replaces_adjustment_id")
                            .build()
                    )
                )
                .replacePrices(
                    listOf(
                        SubscriptionCreateParams.ReplacePrice.builder()
                            .replacesPriceId("replaces_price_id")
                            .discounts(
                                listOf(
                                    SubscriptionCreateParams.ReplacePrice.Discount.builder()
                                        .discountType(
                                            SubscriptionCreateParams.ReplacePrice.Discount
                                                .DiscountType
                                                .PERCENTAGE
                                        )
                                        .amountDiscount("amount_discount")
                                        .percentageDiscount(0.15)
                                        .usageDiscount(0.0)
                                        .build()
                                )
                            )
                            .externalPriceId("external_price_id")
                            .fixedPriceQuantity(2.0)
                            .maximumAmount("1.23")
                            .minimumAmount("1.23")
                            .price(
                                SubscriptionCreateParams.ReplacePrice.Price
                                    .ofNewSubscriptionUnitPrice(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .builder()
                                            .cadence(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .Cadence
                                                    .ANNUAL
                                            )
                                            .itemId("item_id")
                                            .modelType(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .ModelType
                                                    .UNIT
                                            )
                                            .name("Annual fee")
                                            .unitConfig(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .UnitConfig
                                                    .builder()
                                                    .unitAmount("unit_amount")
                                                    .build()
                                            )
                                            .billableMetricId("billable_metric_id")
                                            .billedInAdvance(true)
                                            .billingCycleConfiguration(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .BillingCycleConfiguration
                                                    .builder()
                                                    .duration(0L)
                                                    .durationUnit(
                                                        SubscriptionCreateParams.ReplacePrice.Price
                                                            .NewSubscriptionUnitPrice
                                                            .BillingCycleConfiguration
                                                            .DurationUnit
                                                            .DAY
                                                    )
                                                    .build()
                                            )
                                            .conversionRate(0.0)
                                            .currency("currency")
                                            .externalPriceId("external_price_id")
                                            .fixedPriceQuantity(0.0)
                                            .invoiceGroupingKey("invoice_grouping_key")
                                            .invoicingCycleConfiguration(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .InvoicingCycleConfiguration
                                                    .builder()
                                                    .duration(0L)
                                                    .durationUnit(
                                                        SubscriptionCreateParams.ReplacePrice.Price
                                                            .NewSubscriptionUnitPrice
                                                            .InvoicingCycleConfiguration
                                                            .DurationUnit
                                                            .DAY
                                                    )
                                                    .build()
                                            )
                                            .metadata(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .Metadata
                                                    .builder()
                                                    .build()
                                            )
                                            .referenceId("reference_id")
                                            .build()
                                    )
                            )
                            .priceId("h74gfhdjvn7ujokd")
                            .build()
                    )
                )
                .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .trialDurationDays(0L)
                .build()
        val body = params.getBody()
        assertThat(body).isNotNull
        assertThat(body.addAdjustments())
            .isEqualTo(
                listOf(
                    SubscriptionCreateParams.AddAdjustment.builder()
                        .adjustment(
                            SubscriptionCreateParams.AddAdjustment.Adjustment
                                .ofNewPercentageDiscount(
                                    SubscriptionCreateParams.AddAdjustment.Adjustment
                                        .NewPercentageDiscount
                                        .builder()
                                        .adjustmentType(
                                            SubscriptionCreateParams.AddAdjustment.Adjustment
                                                .NewPercentageDiscount
                                                .AdjustmentType
                                                .PERCENTAGE_DISCOUNT
                                        )
                                        .appliesToPriceIds(listOf("string"))
                                        .percentageDiscount(0.0)
                                        .isInvoiceLevel(true)
                                        .build()
                                )
                        )
                        .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .planPhaseOrder(0L)
                        .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
            )
        assertThat(body.addPrices())
            .isEqualTo(
                listOf(
                    SubscriptionCreateParams.AddPrice.builder()
                        .discounts(
                            listOf(
                                SubscriptionCreateParams.AddPrice.Discount.builder()
                                    .discountType(
                                        SubscriptionCreateParams.AddPrice.Discount.DiscountType
                                            .PERCENTAGE
                                    )
                                    .amountDiscount("amount_discount")
                                    .percentageDiscount(0.15)
                                    .usageDiscount(0.0)
                                    .build()
                            )
                        )
                        .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .externalPriceId("external_price_id")
                        .maximumAmount("1.23")
                        .minimumAmount("1.23")
                        .planPhaseOrder(0L)
                        .price(
                            SubscriptionCreateParams.AddPrice.Price.ofNewSubscriptionUnitPrice(
                                SubscriptionCreateParams.AddPrice.Price.NewSubscriptionUnitPrice
                                    .builder()
                                    .cadence(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .Cadence
                                            .ANNUAL
                                    )
                                    .itemId("item_id")
                                    .modelType(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .ModelType
                                            .UNIT
                                    )
                                    .name("Annual fee")
                                    .unitConfig(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .UnitConfig
                                            .builder()
                                            .unitAmount("unit_amount")
                                            .build()
                                    )
                                    .billableMetricId("billable_metric_id")
                                    .billedInAdvance(true)
                                    .billingCycleConfiguration(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .BillingCycleConfiguration
                                            .builder()
                                            .duration(0L)
                                            .durationUnit(
                                                SubscriptionCreateParams.AddPrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .BillingCycleConfiguration
                                                    .DurationUnit
                                                    .DAY
                                            )
                                            .build()
                                    )
                                    .conversionRate(0.0)
                                    .currency("currency")
                                    .externalPriceId("external_price_id")
                                    .fixedPriceQuantity(0.0)
                                    .invoiceGroupingKey("invoice_grouping_key")
                                    .invoicingCycleConfiguration(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .InvoicingCycleConfiguration
                                            .builder()
                                            .duration(0L)
                                            .durationUnit(
                                                SubscriptionCreateParams.AddPrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .InvoicingCycleConfiguration
                                                    .DurationUnit
                                                    .DAY
                                            )
                                            .build()
                                    )
                                    .metadata(
                                        SubscriptionCreateParams.AddPrice.Price
                                            .NewSubscriptionUnitPrice
                                            .Metadata
                                            .builder()
                                            .build()
                                    )
                                    .referenceId("reference_id")
                                    .build()
                            )
                        )
                        .priceId("h74gfhdjvn7ujokd")
                        .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
            )
        assertThat(body.alignBillingWithSubscriptionStartDate()).isEqualTo(true)
        assertThat(body.autoCollection()).isEqualTo(true)
        assertThat(body.awsRegion()).isEqualTo("aws_region")
        assertThat(body.billingCycleAnchorConfiguration())
            .isEqualTo(
                SubscriptionCreateParams.BillingCycleAnchorConfiguration.builder()
                    .day(1L)
                    .month(1L)
                    .year(0L)
                    .build()
            )
        assertThat(body.couponRedemptionCode()).isEqualTo("coupon_redemption_code")
        assertThat(body.creditsOverageRate()).isEqualTo(0.0)
        assertThat(body.customerId()).isEqualTo("customer_id")
        assertThat(body.defaultInvoiceMemo()).isEqualTo("default_invoice_memo")
        assertThat(body.endDate()).isEqualTo(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(body.externalCustomerId()).isEqualTo("external_customer_id")
        assertThat(body.externalMarketplace())
            .isEqualTo(SubscriptionCreateParams.ExternalMarketplace.GOOGLE)
        assertThat(body.externalMarketplaceReportingId())
            .isEqualTo("external_marketplace_reporting_id")
        assertThat(body.externalPlanId()).isEqualTo("ZMwNQefe7J3ecf7W")
        assertThat(body.filter()).isEqualTo("my_property > 100 AND my_other_property = 'bar'")
        assertThat(body.initialPhaseOrder()).isEqualTo(2L)
        assertThat(body.invoicingThreshold()).isEqualTo("10.00")
        assertThat(body.metadata()).isEqualTo(SubscriptionCreateParams.Metadata.builder().build())
        assertThat(body.netTerms()).isEqualTo(0L)
        assertThat(body.perCreditOverageAmount()).isEqualTo(0.0)
        assertThat(body.planId()).isEqualTo("ZMwNQefe7J3ecf7W")
        assertThat(body.planVersionNumber()).isEqualTo(0L)
        assertThat(body.priceOverrides()).isEqualTo(listOf(JsonValue.from(mapOf<String, Any>())))
        assertThat(body.removeAdjustments())
            .isEqualTo(
                listOf(
                    SubscriptionCreateParams.RemoveAdjustment.builder()
                        .adjustmentId("h74gfhdjvn7ujokd")
                        .build()
                )
            )
        assertThat(body.removePrices())
            .isEqualTo(
                listOf(
                    SubscriptionCreateParams.RemovePrice.builder()
                        .externalPriceId("external_price_id")
                        .priceId("h74gfhdjvn7ujokd")
                        .build()
                )
            )
        assertThat(body.replaceAdjustments())
            .isEqualTo(
                listOf(
                    SubscriptionCreateParams.ReplaceAdjustment.builder()
                        .adjustment(
                            SubscriptionCreateParams.ReplaceAdjustment.Adjustment
                                .ofNewPercentageDiscount(
                                    SubscriptionCreateParams.ReplaceAdjustment.Adjustment
                                        .NewPercentageDiscount
                                        .builder()
                                        .adjustmentType(
                                            SubscriptionCreateParams.ReplaceAdjustment.Adjustment
                                                .NewPercentageDiscount
                                                .AdjustmentType
                                                .PERCENTAGE_DISCOUNT
                                        )
                                        .appliesToPriceIds(listOf("string"))
                                        .percentageDiscount(0.0)
                                        .isInvoiceLevel(true)
                                        .build()
                                )
                        )
                        .replacesAdjustmentId("replaces_adjustment_id")
                        .build()
                )
            )
        assertThat(body.replacePrices())
            .isEqualTo(
                listOf(
                    SubscriptionCreateParams.ReplacePrice.builder()
                        .replacesPriceId("replaces_price_id")
                        .discounts(
                            listOf(
                                SubscriptionCreateParams.ReplacePrice.Discount.builder()
                                    .discountType(
                                        SubscriptionCreateParams.ReplacePrice.Discount.DiscountType
                                            .PERCENTAGE
                                    )
                                    .amountDiscount("amount_discount")
                                    .percentageDiscount(0.15)
                                    .usageDiscount(0.0)
                                    .build()
                            )
                        )
                        .externalPriceId("external_price_id")
                        .fixedPriceQuantity(2.0)
                        .maximumAmount("1.23")
                        .minimumAmount("1.23")
                        .price(
                            SubscriptionCreateParams.ReplacePrice.Price.ofNewSubscriptionUnitPrice(
                                SubscriptionCreateParams.ReplacePrice.Price.NewSubscriptionUnitPrice
                                    .builder()
                                    .cadence(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .Cadence
                                            .ANNUAL
                                    )
                                    .itemId("item_id")
                                    .modelType(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .ModelType
                                            .UNIT
                                    )
                                    .name("Annual fee")
                                    .unitConfig(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .UnitConfig
                                            .builder()
                                            .unitAmount("unit_amount")
                                            .build()
                                    )
                                    .billableMetricId("billable_metric_id")
                                    .billedInAdvance(true)
                                    .billingCycleConfiguration(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .BillingCycleConfiguration
                                            .builder()
                                            .duration(0L)
                                            .durationUnit(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .BillingCycleConfiguration
                                                    .DurationUnit
                                                    .DAY
                                            )
                                            .build()
                                    )
                                    .conversionRate(0.0)
                                    .currency("currency")
                                    .externalPriceId("external_price_id")
                                    .fixedPriceQuantity(0.0)
                                    .invoiceGroupingKey("invoice_grouping_key")
                                    .invoicingCycleConfiguration(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .InvoicingCycleConfiguration
                                            .builder()
                                            .duration(0L)
                                            .durationUnit(
                                                SubscriptionCreateParams.ReplacePrice.Price
                                                    .NewSubscriptionUnitPrice
                                                    .InvoicingCycleConfiguration
                                                    .DurationUnit
                                                    .DAY
                                            )
                                            .build()
                                    )
                                    .metadata(
                                        SubscriptionCreateParams.ReplacePrice.Price
                                            .NewSubscriptionUnitPrice
                                            .Metadata
                                            .builder()
                                            .build()
                                    )
                                    .referenceId("reference_id")
                                    .build()
                            )
                        )
                        .priceId("h74gfhdjvn7ujokd")
                        .build()
                )
            )
        assertThat(body.startDate()).isEqualTo(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(body.trialDurationDays()).isEqualTo(0L)
    }

    @Test
    fun getBodyWithoutOptionalFields() {
        val params = SubscriptionCreateParams.builder().build()
        val body = params.getBody()
        assertThat(body).isNotNull
    }
}
